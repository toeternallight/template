1. 如何判断宏中有无参数

    假设宏F(...)用于判断参数列表中有无参数，一个简单的想法是，利用__VA_ARGS__去移动宏参数的位置，例如
               #define F(...) _F(__VA_ARGS__,1,0)
               #define _F(a,b,...) b

    假如__VA_ARGS__为空，则为_F(1,0)，否则为_F(x,1,0)可以看出，两种情况下，_F将返回0或1当然上述的写法并不能工作，因为，当__VA_ARGS__为空时，那么上述将会得到语法错误进一步，我们可以使用##__VA_ARGS__，它可以使当__VA_ARGS__为空时，去掉前面的逗号我们对上面的写法稍作一下修改#define F(...) _F(0,__VA_ARGS__,1,0)
#define _F(a,b,c,...) c
通过最前面添加一个参数，来避免参数列表为空时的情况
              #define F(...) _F(0,__VA_ARGS__,1,0)
              #define _F(a,b,c,...) c

    通过最前面添加一个参数，来避免参数列表为空时的情况

2. 判断参数个数

    上面的写法实现了判断有没有参数，可以发现，如果参数超过1个，也将不能工作看到宏中参数每次增加，则_F中的参数都会向后移动，那么我们可以通过增加参数个数来得到统计宏中参数个数的效果#define count_macro_args(...) _count_macro_args_helper(0,##__VA_ARGS__,8,7,6,5,4,3,2,1,0)
             #define _count_macro_args_helper(_0,_1,_2,_3,_4,_5,_6,_7,_8,x,...) x
    该例子中，我们可以最多统计到8个参数，实际上仍然可以向后加
